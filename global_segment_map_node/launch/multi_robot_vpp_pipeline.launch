<?xml version="1.0"?>

<launch>
  <arg name="scene_name" default="multi_robot_scene"/>
  <arg name="sensor_name" default="primesense"/>
  <arg name="visualize" default="true"/>
  <arg name="world_name" default="map"/>
  <arg name="robot_name" default="fetch_"/>
  <arg name="robot_num" default="3"/>
  <arg name="camera_frame_topic_name" default="head_camera_rgb_optical_frame"/>
  <arg name="camera_depth_image_topic_prefix" default="/head_camera/depth_registered/"/>
  <arg name="camera_rgb_image_topic_prefix" default="/head_camera/rgb/"/>
  <arg name="camera_groud_truth_topic_name" default="head_camera_ground_truth"/>
  <arg name="pub_tf" default="0"/>
  <arg name="scene_pointcloud_file_path" default=".gazebo/models/MatterPort/01/matterport_01_1000000.ply"/>

  <include file="$(find mask_rcnn_ros)/launch/mask_rcnn_node.launch">
    <arg name="sensor_name" value="$(arg sensor_name)"/>
    <arg name="visualize" value="$(arg visualize)" />
  </include>

  <include file="$(find depth_segmentation)/launch/semantic_depth_segmentation.launch">
    <arg name="sensor_name" value="$(arg sensor_name)"/>
    <arg name="visualize" value="$(arg visualize)"/>
  </include>

  <include file="$(find gsm_node)/launch/gsm_node.launch">
    <arg name="scene_name" value="$(arg scene_name)"/>
    <arg name="visualize" value="$(arg visualize)"/>
  </include>

  <include file="$(find robot_position_loader)/launch/RobotPositionLoaderServer.launch">
    <arg name="world_name" value="$(arg world_name)"/>
    <arg name="robot_name" value="$(arg robot_name)"/>
    <arg name="robot_num" value="$(arg robot_num)"/>
  </include>

  <include file="$(find gsm_topic_sync)/launch/gsm_camera_data_pub.launch">
    <arg name="world_name" value="$(arg world_name)"/>
    <arg name="robot_name" value="$(arg robot_name)"/>
    <arg name="robot_num" value="$(arg robot_num)"/>
    <arg name="camera_frame_topic_name" value="$(arg camera_frame_topic_name)"/>
    <arg name="camera_depth_image_topic_prefix" value="$(arg camera_depth_image_topic_prefix)"/>
    <arg name="camera_rgb_image_topic_prefix" value="$(arg camera_rgb_image_topic_prefix)"/>
    <arg name="camera_groud_truth_topic_name" value="$(arg camera_groud_truth_topic_name)"/>
    <arg name="pub_tf" value="$(arg pub_tf)"/>
  </include>

  <include file="$(find occupancy_grid_publisher)/launch/OccupancyGridPublisherServer.launch"/>
  <include file="$(find grnet_detect)/launch/grnet_service.launch"/>

  <include file="$(find pointcloud2_to_object_vec_converter)/launch/PointCloud2ToObjectVecConverterServer.launch"/>
  <include file="$(find view_point_extractor)/launch/ViewPointExtractorServer.launch"/>

  <include file="$(find tensorboard_logger_ros)/launch/TensorBoardLoggerServer.launch"/>

  <include file="$(find robot_move_state_manager)/launch/RobotMoveStateManager.launch">
    <arg name="robot_name" value="$(arg robot_name)"/>
    <arg name="robot_num" value="$(arg robot_num)"/>
  </include>

  <!-- <include file="$(find robot_position_visualizer)/launch/RobotPositionVisualizer.launch"> -->
    <!-- <arg name="robot_name" value="$(arg robot_name)"/> -->
    <!-- <arg name="robot_num" value="$(arg robot_num)"/> -->
  <!-- </include> -->

  <node name="view_point_extractor" pkg="view_point_extractor" type="try_view_point_extractor" output="screen"/>

  <include file="$(find pointcloud_diff)/launch/PointCloudDiff.launch">
    <arg name="scene_pointcloud_file_path" value="$(arg scene_pointcloud_file_path)"/>
  </include>
</launch>

